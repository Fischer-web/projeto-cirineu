name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Create temporary package-lock.json
      run: |
        echo '{}' > package-lock.json
        echo "✓ Temporary package-lock.json created"
        ls -la package-lock.json
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        run_install: false
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: ''
        
    - name: Verify Node.js version
      run: |
        echo "Node.js version:"
        node --version
        echo "NPM version:"
        npm --version
        echo "✓ Node.js setup complete"
    
    - name: Verify pnpm-lock.yaml exists
      run: |
        if [ ! -f "pnpm-lock.yaml" ]; then
          echo "Error: pnpm-lock.yaml not found!"
          exit 1
        fi
        echo "✓ pnpm-lock.yaml found"
        ls -la pnpm-lock.yaml
    
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Clean npm cache and verify pnpm
      run: |
        # Remove any npm cache that might interfere
        rm -rf ~/.npm
        # Verify pnpm is working
        echo "PNPM version:"
        pnpm --version
        echo "Node.js version in pnpm context:"
        pnpm exec node --version
        echo "✓ pnpm is working with correct Node.js version"
        # Ensure we're using pnpm lock file
        ls -la pnpm-lock.yaml
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies with pnpm..."
        # Force pnpm to use its own lock file
        pnpm install --frozen-lockfile --prefer-frozen-lockfile
        echo "✓ Dependencies installed successfully"
        # Verify node_modules was created
        ls -la node_modules/ | head -5
    
    - name: Build
      run: pnpm run build
      env:
        NODE_ENV: production
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4